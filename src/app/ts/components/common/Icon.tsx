import * as React from 'react';
import Color = require('color');

export enum EIcon {
	Favorite,
	Camera,
	Bed,
	Bath
}

export enum EIconType {
	Default,
	TwoTone,
	Outline,
	Filled
}

interface IProps {
	icon: EIcon;
	size: number;
	color: Color;
	type?: EIconType;
}

const TWO_TONE_ALPHA: number = 0.5;

export class Icon extends React.PureComponent<IProps, {}> {
	public render() {
		const { size, color, type } = this.props;
		const icon = this.getIcon(type, color);

		if (icon) {
			return (
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width={size}
					height={size}
					viewBox="0 0 20 20"
					preserveAspectRatio="none"
				>
					{icon}
				</svg>
			);
		} else {
			return null;
		}
	}

	private getIcon(type: EIconType, color: Color) {
		switch (this.props.icon) {
			case EIcon.Favorite : return favorite(color.toString(), type);
			case EIcon.Camera : return camera(color.toString(), type);
			case EIcon.Bed : return bed(color.toString(), type);
			case EIcon.Bath : return bath(color.toString(), type);

			default : return null;
		}
	}
}

const camera = (color: string, type: EIconType) => {
	return (
		<g transform='translate(-2, 0)'>
			<path fill={color} opacity={TWO_TONE_ALPHA} d='M20,6h-4.05l-1.83-2H9.88L8.05,6H4v12h16V6z M12,17c-2.76,0-5-2.24-5-5s2.24-5,5-5s5,2.24,5,5 S14.76,17,12,17z'/>
			<path fill={color} d='M4,20h16c1.1,0,2-0.9,2-2V6c0-1.1-0.9-2-2-2h-3.17L15,2H9L7.17,4H4C2.9,4,2,4.9,2,6v12C2,19.1,2.9,20,4,20z M4,6h4.05 l1.83-2h4.24l1.83,2H20v12H4V6z'/>
			<path fill={color} d='M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5S14.76,7,12,7z M12,15c-1.65,0-3-1.35-3-3c0-1.65,1.35-3,3-3s3,1.35,3,3 C15,13.65,13.65,15,12,15z'/>
		</g>
	);
};

const favorite = (color: string, type: EIconType) => {
	switch (type) {
		case EIconType.TwoTone : {
			return (
				<g transform='translate(0, 2)'>
					<path
						d='M14.5,0 C17.58,0 20,2.42 20,5.5 C20,9.28 16.6,12.36 11.45,17.03 L10,18.35 L8.55,17.04 C3.4,12.36 0,9.28 0,5.5 C0,2.42 2.42,0 5.5,0 C7.24,0 8.91,0.81 10,2.09 C11.09,0.81 12.76,0 14.5,0 Z M10.1,15.55 C14.86,11.24 18,8.39 18,5.5 C18,3.5 16.5,2 14.5,2 C12.96,2 11.46,2.99 10.94,4.36 L9.07,4.36 C8.54,2.99 7.04,2 5.5,2 C3.5,2 2,3.5 2,5.5 C2,8.39 5.14,11.24 9.9,15.55 L10,15.65 L10.1,15.55 Z'
						fill={color}
						fillRule='nonzero'
					/>
					<path
						d='M10.1,15.55 L10,15.65 L9.9,15.55 C5.14,11.24 2,8.39 2,5.5 C2,3.5 3.5,2 5.5,2 C7.04,2 8.54,2.99 9.07,4.36 L10.94,4.36 C11.46,2.99 12.96,2 14.5,2 C16.5,2 18,3.5 18,5.5 C18,8.39 14.86,11.24 10.1,15.55 Z'
						fillOpacity={TWO_TONE_ALPHA}
						fill={color}
					/>
				</g>
			);
		}

		default : {
			return (
				<path
					fill={color}
					transform="translate(0, 2)"
					d="M14.5,0 C12.76,0 11.09,0.81 10,2.09 C8.91,0.81 7.24,0 5.5,0 C2.42,0 0,2.42 0,5.5 C0,9.28 3.4,12.36 8.55,17.04 L10,18.35 L11.45,17.03 C16.6,12.36 20,9.28 20,5.5 C20,2.42 17.58,0 14.5,0 Z M10.1,15.55 L10,15.65 L9.9,15.55 C5.14,11.24 2,8.39 2,5.5 C2,3.5 3.5,2 5.5,2 C7.04,2 8.54,2.99 9.07,4.36 L10.94,4.36 C11.46,2.99 12.96,2 14.5,2 C16.5,2 18,3.5 18,5.5 C18,8.39 14.86,11.24 10.1,15.55 Z"
				/>
			);
		}
	}
};

const bed = (color: string, type: EIconType) => {
	return (
		<g transform='translate(0, 5)'>
			<path fill={color} d="M18.8642578,7.49335938 L19.5166406,3.60464844 C19.6667578,2.70992188 19.4167578,1.79957031 18.8307422,1.10707031 C18.2446875,0.414492187 17.3883203,0.01734375 16.4810937,0.01734375 L3.51890625,0.01734375 C2.61167969,0.01734375 1.7553125,0.414570312 1.16925781,1.10703125 C0.583203125,1.79960938 0.333203125,2.70988281 0.483320313,3.60460938 L1.13574219,7.49335938 C0.452929688,7.93707031 0,8.70613281 0,9.57949219 C0,10.7814063 0.857226562,11.7867969 1.99234375,12.0166797 L1.99234375,13.8108203 L3.29667969,13.8108203 L3.29667969,12.0662109 L16.7032812,12.0662109 L16.7032812,13.8108203 L18.0076172,13.8108203 L18.0076172,12.0166797 C19.1427734,11.7867188 20,10.7814063 20,9.57949219 C20,8.70617188 19.5470703,7.93710938 18.8642578,7.49335938 Z M2.16496094,1.94957031 C2.50265625,1.55046875 2.99617188,1.32164063 3.51890625,1.32164063 L16.4810547,1.32164063 C17.0037891,1.32164063 17.4973047,1.55054688 17.8350391,1.94960938 C18.1727344,2.34867188 18.3167969,2.87320313 18.2303125,3.38882813 L17.6084766,7.09511719 C17.5768359,7.09390625 17.5451563,7.09269531 17.5132422,7.09269531 L15.9243359,7.09269531 L15.9243359,3.28359375 L4.07566406,3.28359375 L4.07566406,7.09269531 L2.48675781,7.09269531 C2.45484375,7.09269531 2.42320313,7.09390625 2.39152344,7.09511719 L1.7696875,3.38882813 C1.68316406,2.87324219 1.82726563,2.34863281 2.16496094,1.94957031 Z M14.62,4.58796875 L14.62,7.09269531 L10.6521875,7.09269531 L10.6521875,4.58796875 L14.62,4.58796875 Z M9.3478125,4.58796875 L9.3478125,7.09269531 L5.38,7.09269531 L5.38,4.58796875 L9.3478125,4.58796875 Z M17.5132422,10.7618359 L2.48675781,10.7618359 C1.83480469,10.7618359 1.304375,10.2314453 1.304375,9.57949219 C1.304375,8.96144531 1.78113281,8.45296875 2.38613281,8.40167969 L17.6139453,8.40167969 C18.2189453,8.45296875 18.6957031,8.96144531 18.6957031,9.57949219 C18.6956641,10.2314453 18.1652344,10.7618359 17.5132422,10.7618359 Z"/>
		</g>
	);
};

const bath = (color: string, type: EIconType) => {
	return (
		<g transform='translate(0, 0); scale(0.9)'>
			<path fill={color} d="M2.24889764,2.6038189 C2.24889764,1.91086614 2.8126378,1.34708661 3.50562992,1.34708661 C4.09692913,1.34708661 4.5938189,1.75767717 4.72704724,2.30862205 C4.18677165,2.64425197 3.77629921,3.14685039 3.55543307,3.7538189 C3.2946063,4.47043307 3.3284252,5.24562992 3.65074803,5.93673228 L3.92854331,6.53251969 L9.10326772,4.11948819 L8.82547244,3.52374016 C8.50322835,2.8326378 7.93106299,2.30838583 7.21448819,2.04755906 C6.81122047,1.90070866 6.38929134,1.84728346 5.97433071,1.88606299 C5.66283465,0.816535433 4.67444882,0.0324409449 3.50566929,0.0324409449 C2.08779528,0.0324409449 0.934330709,1.18594488 0.934330709,2.60377953 L0.934330709,10.4001969 L0.951496063,11.7148031 C1.02354331,13.0920079 1.3284252,14.2288189 1.87862205,15.1743701 C2.3673622,16.0143307 3.04271654,16.6738976 3.88590551,17.1347638 C4.0765748,17.2389764 4.27649606,17.3327165 4.48468504,17.4166535 L3.25562992,19.2297244 L4.34377953,19.9674016 L5.81704724,17.7941339 C6.32598425,17.8860236 6.87055118,17.9329528 7.44952756,17.9329528 L12.7079921,17.9329528 C13.2870079,17.9329528 13.8315354,17.8860236 14.3404724,17.7941339 L15.8137402,19.9674016 L16.9018898,19.2297244 L15.6728346,17.4166535 C15.881063,17.3326772 16.0809449,17.2390157 16.2716142,17.1347638 C17.1148031,16.6738583 17.7901575,16.0143307 18.2788976,15.1743701 C18.8290551,14.2288583 19.1339764,13.0920079 19.2060236,11.7148031 L19.1574803,10.4001969 L2.24889764,10.4001969 L2.24889764,2.6038189 Z M5.58716535,3.33437008 C5.79425197,3.23779528 6.01535433,3.18917323 6.23716535,3.18917323 C6.41480315,3.1892126 6.59299213,3.22035433 6.76488189,3.28291339 C6.93433071,3.34456693 7.0888189,3.43358268 7.22350394,3.54543307 L4.69704724,4.72358268 C4.69791339,4.5484252 4.72905512,4.37287402 4.79074803,4.2034252 C4.93145669,3.81688976 5.21429134,3.50826772 5.58716535,3.33437008 Z M17.1426378,14.5132677 C16.3298031,15.9101575 14.8377953,16.6184252 12.7079921,16.6184252 L7.44948819,16.6184252 C5.31968504,16.6184252 3.82767717,15.9101575 3.01484252,14.5132677 C2.58070866,13.7671654 2.33523622,12.8466535 2.26838583,11.7148819 L17.8890945,11.7148819 C17.8222441,12.8466535 17.5767717,13.7671654 17.1426378,14.5132677 Z"/>
		</g>
	);
};